- may want simulation to be adaptive? or at leaset have an adaptive option. because students may just NOT get it the first time, and need additional interventions
- we may want intervention schedules.
- interventions could/should be based on behavior, like more interventions if a student gets something incorrect
- remember to put "observed" flag on


Activity Emitter object encapsulates whatever is making the decision of what to present next to a student
could be an online provider, student, parent, teacher
A simulation can have more than one activity Emitter
1. student encounters activity Emitter
2. AE creates an event
3. student generates behavior




prerequisite gate to make the lambda
- lambda gate is output
- input is the list of prerequisite skills and their statuses
- could take different shapes

does practice help PREREQUISITES too?





InteractionGenerator
- string identifier
- accepts a history and filters it to just what it can 'see', i.e. what matches its identifier
- returns some combination of

config - set skills

student = Student(config)
ig = InteractionGenerator(config)
student.register(ig) #sets time to 0
student.create_history(history_config) #this is

behavior = student.interact(generator, time_control='generator')
student.update_history(behavior)


Who sets the interaction schedule in terms of TIME
- the IG has a recommended schedule
- the student does some fraction of this schedule
- there should be large variability between students
- how the heck will we model this?
- for now, skip it -- we can do it later
